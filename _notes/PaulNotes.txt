
FLAME GPU API class


    Needs to contain a hashmap of agent variables for a given point in the simulation layers
    
    What I mean by this is: Before any single agent function is executed the FLAME GPU API class should be configured with the correct hash map of data.
    
    This class should not need to have any concept of the "gpu" module classes
    
    Does not need a swap list. For now we can say it does not need a new list either (we can add agent outputs later)
    
    An example of how the getVariable should work
    
        1) Given the string name argument use runtime hashing to get a variable unsigned int (call function in RuntimeHashing.h)
        2) Call (a new local) getHashIndex function to check the actual index in the hash table for the variable name. Once found we have a pointer to the vector of data for that agent variable
        3) Using the CUDA thread and block index (threadIdx.x) return the specific agent variable value from the vector
        
    Useful existing code to look at is CUDAAgentStateList setAgentData function
    
        Note that this is using the hashing to get a specific pointer for a given variable name. This is exactly what we want to do in the FLAME GPU API class
        
Other stuff

    Leave "gpu" module as is for now but add function which returns a pointer to an agent variable vector on the device
        
        
    